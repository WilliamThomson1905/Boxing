@model BoxingSite.Models.ProfileViewModel
@{
    ViewBag.Title = "Manage";
}


<div id="wrapper">
    <section class="main">
        <div class="inner">
            <h2>@Model.Forename @Model.Surname</h2>
            <p class="text-success">@ViewBag.StatusMessage</p>

            <div class="form-horizontal">
                <h4>
                    Change your account Details
                </h4>
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.UserName)
                    @Html.HiddenFor(m => m.Email)
                    @Html.ValidationSummary("", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(m => m.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.Title, "", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Forename, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.Forename, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.Forename, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Surname, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(m => m.DOB, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                            @Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })


                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(m => m.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.Mobile, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.RepeatMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.RepeatMobile, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.ValidationMessageFor(m => m.RepeatMobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.AccountHidden, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.AccountHidden, new SelectList(
                                new[] {
                                    new { Value = "true", Text = "Yes" },
                                    new { Value = "false", Text = "No" },
                                },
                                "Value",
                                "Text"
                            ),  new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.AccountHidden)
                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    if (User.IsInRole("General"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.SkillLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(m => m.SkillLevel, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.SkillLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Weight, new { htmlAttributes = new { @type = "number", @min = "0", @step = "0.1", @class = "form-control", } })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Height, new { htmlAttributes = new { @type = "number", @min = "0", @step = "0.1", @class = "form-control", } })
                                @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Gender, new SelectList(
                                    new[] {
                                        new { Value = "true", Text = "Male" },
                                        new { Value = "false", Text = "Female" },
                                    },
                                    "Value",
                                    "Text"
                                ),  new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender)
                            </div>
                        </div>


                    }

                    if (User.IsInRole("Trainer"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(m => m.ImageSrc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.ImageSrc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.ImageSrc, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Instagram, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Instagram, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Instagram, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Facebook, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.LinkedIn, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Twitter, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(m => m.Twitter, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Twitter, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Available, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Available, new SelectList(
                                    new[] {
                                        new { Value = "true", Text = "Yes" },
                                        new { Value = "false", Text = "No" },
                                    },
                                    "Value",
                                    "Text"
                                ),  new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Available)
                            </div>
                        </div>



                    }



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="button primary" onclick="return confirm('Are you sure you wish to Update your Account?');" />
                        </div>
                    </div>


                }



                <br /><br /><hr />
                <!-- Password management -->
                <div class="inner">
                    <dl class="dl-horizontal">
                        <dt>Password:</dt>
                        <dd>
                            [
                            @if (Model.HasPassword)
                            {
                                @Html.ActionLink("Change your password", "ChangePassword")
                            }
                            else
                            {
                                @Html.ActionLink("Create", "SetPassword")
                            }
                            ]
                        </dd> @*
                                        <dt>External Logins:</dt>
                                        <dd>
                                            @Model.Logins.Count [
                                            @Html.ActionLink("Manage", "ManageLogins") ]
                                        </dd>

                            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                             See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                             Uncomment the following block after you have set up two-factor authentication
                        *@
                        @*
                            <dt>Phone Number:</dt>
                            <dd>
                                @(Model.PhoneNumber ?? "None")
                                @if (Model.PhoneNumber != null)
                                {
                                    <br />
                                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                                    }
                                }
                                else
                                {
                                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                                }
                            </dd>
                        *@
                        <dt>Two-Factor Authentication:</dt>
                        <dd>
                            <p>
                                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                for details on setting up this ASP.NET application to support two-factor authentication.
                            </p>
                            @*@if (Model.TwoFactor)
                                {
                                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Enabled
                                        <input type="submit" value="Disable" class="btn btn-link" />
                                        </text>
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Disabled
                                        <input type="submit" value="Enable" class="btn btn-link" />
                                        </text>
                                    }
                                }*@
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </section>
</div>


