@model BoxingSite.Models.Schedule




<div id="wrapper">

    <!-- One -->
    <section class="main">
        <div class="inner">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Schedule</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="form-group">
                    @Html.LabelFor(model => model.BoxingClassID, "BoxingClassID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BoxingClassID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BoxingClassID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TrainerID, "TrainerID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TrainerID", (IEnumerable<SelectListItem>)ViewBag.trainers, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TrainerID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <hr/>

                <div class="form-group">
                    @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Day, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.ClassStatus, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassStatus, "", new { @class = "text-danger" })
                    </div>
                </div>


              
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        @Html.ActionLink("Back to List", "Schedule")
                    </div>
                </div>
            </div>
            }
        </div>
    </section>
</div>