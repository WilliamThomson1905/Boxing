@model BoxingSite.Models.Schedule

<style>

    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 0px;
        background-color: #f1f1f1;
    }

    .detailsTab{
        margin-bottom: 60px;
    }



    /* Style the buttons inside the tab */
    .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
        transition: 0.3s;
        font-size: 17px;
        align-content: center;
    }

            /* Change background color of buttons on hover */
            .tab button:hover, .tab button:active {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        border: 0px;
        border-top: none;
    }
</style>
<div id="wrapper">

    <!-- One -->
    <section class="main">




        <div class="inner">


            <div class="detailsTab align-center" >
                <button class="tablinks button primary" onclick="openTab(event, 'BoxingClass')">
                    Session Details
                </button>

                <button class="tablinks button" onclick="openTab(event, 'Boxer')">
                    Boxer Details
                </button>
            </div>
        </div>
        <div class="inner">

            <div id="Boxer" class="tabcontent">
                <h2>
                    @Html.DisplayFor(model => model.Boxer.Forename)
                    @Html.DisplayFor(model => model.Boxer.Surname)
                </h2>
                <p class="">
                    @Html.DisplayFor(model => model.Boxer.Description)
                </p>



                <h3 class="align-center">
                    @Html.ActionLink("View Boxer", "BoxerDetails", "Boxer", new { id = Model.BoxerID }, null)
                    &nbsp;&nbsp;
                    @Html.ActionLink("Back to Schedule", "Schedule", "Schedule")
                </h3>
            

            </div>



            <div id="BoxingClass" class="tabcontent" style="display: block">
                <h2>@Html.DisplayFor(model => model.BoxingClass.Title)</h2>
                <p class="italic">
                    @Html.DisplayFor(model => model.Day):
                    @Html.DisplayFor(model => model.StartTime) - @Html.DisplayFor(model => model.EndTime)
                    <br />
                    Class Status: @Html.DisplayFor(model => model.ClassStatus)
                </p>
                <p>
                    @Html.DisplayFor(model => model.BoxingClass.Description)
                </p>





                <h3 class="align-center">
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.ActionLink("Edit Session", "EditSession", new { Id = Model.ScheduleID })
                        @Html.Raw("&nbsp; &nbsp;")
                    }
                    @Html.ActionLink("Back to Schedule", "Schedule")
                </h3>
            </div>
        </div>

    </section>
</div>





<script>
    function openTab(evt, infoName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";

        }

        tablinks = document.getElementsByClassName("tablinks");

        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
            tablinks[i].className = tablinks[i].className.replace(" primary", "");
        }

        document.getElementById(infoName).style.display = "block";
        evt.currentTarget.className += " active";
        evt.currentTarget.className += " primary";

    }
</script>